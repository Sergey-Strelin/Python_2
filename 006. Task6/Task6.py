# В большой текстовой строке подсчитать количество встречаемых слов
# и вернуть 10 самых частых.
# Не учитывать знаки препинания и регистр символов.
# За основу возьмите любую статью из википедии или из документации к языку.

import string

# текст взят из книги "Путь в ИТ" с сайта GB

string_long = "Перед вами книга, написанная на основе цикла онлайнинтенсивов \
«Путь в IT» от GeekBrains. Уделив буквально пару дней \
ее прочтению, вы узнаете главное о популярных IT-профессиях \
и поймете, что действительно ждет индустрию в ближайшие \
5–10 лет. Книга собрала в себе опыт и знания генерального \
директора компании GeekBrains Александра Волчека \
и ее исполнительного директора Александра Сагуна, которые уже \
более 22 лет успешно реализуют проекты в IT-сфере. \
Что же такое IT? Дословно это «информационные технологии». \
То есть все, что связано с обработкой, хранением и передачей \
информации с помощью вычислительной техники. Технологии \
оцифровали наши привычные действия: мы работаем \
за компьютером и общаемся с близкими с помощью голосовых \
сообщений. Бизнес создает программы и сервисы, благодаря \
которым мы покупаем продукты, одежду и билеты на самолет. \
И все эти привычные для нас процессы функционируют \
благодаря программированию, а если быть точнее—благодаря \
профессионализму разработчиков. Но кто такие разработчики \
и почему они будут востребованы еще многие десятилетия? \
Именно на этот глобальный вопрос вы найдете ответ в книге. \
Если говорить более детально, вы познакомитесь с миром \
информационных технологий и ситуацией на рынке труда, \
а также изучите 5 ведущих специализаций в 2022 году: \
программист, тестировщик, аналитик, проджект- и продактменеджер. \
Поймете, какие шаги нужно сделать, чтобы войти \
в сферу информационных технологий и уверенно себя там \
чувствовать, развиваться и состояться как профессионал. \
И главное, найдете ответы на самые популярные вопросы: \
По каким критериям люди обычно выбирают профессию и как \
нужно делать это на самом деле?"

# удаляем знаки пунктуации, делаем все буквы строчными и превращаем в список
string_long_no_puncuations = string_long.translate(str.maketrans("","",string.punctuation))
string_array = string_long_no_puncuations.lower().split()

# считаем как часто какое слово попадается в тексте и складываем в словарь
# допущения
# - слово не может состоять из 1 буквы
# - предлоги из 2х букв являются словами
word_count = {}
for word in string_array:
    if len(word) > 1 and word.isdigit() == False:
        word_count[word] = string_array.count(word)

# сортируем по значению ключа, делаем срез из последних 10 значений
# и разворачиваем его в порядке убывания
max_ten_words = sorted(word_count.items(), key=lambda item: item[1])[-1:-11:-1]

# печатаем (количество слов в тексте с учётом допущений о словах выше)
print("Количество слов в тексте: " + str(len(string_array)))
print("10 самых употребляемых слов в тексте (в порядке убывания):  ")
for item in max_ten_words:
    print(*item)

